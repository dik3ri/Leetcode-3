TASK №1-------------------------------------------------------------------------------------------------------------------
https://leetcode.com/problems/distribute-elements-into-two-arrays-i/ 

public class Solution {
    public int[] ResultArray(int[] nums) {
        List<int> arr1 = new List<int>();
        List<int> arr2 = new List<int>();
        
        for(int i = 0; i < nums.Length;i++){
            
            if(i < nums.Length - 1){
                
                arr1.Add(nums[i]);
                i++;
                arr2.Add(nums[i]);
            } else {
                if(arr1[arr1.Count - 1] > arr2[arr2.Count - 1]){
                    arr1.Add(nums[i]);
                } else {
                    arr2.Add(nums[i]);
                }
            }
        }

        int [] result  = new int[arr1.Count + arr2.Count];
        arr1.CopyTo(result, 0);
        arr2.CopyTo(result, arr1.Count);

        return result;

    

    }
}
TASK №1-------------------------------------------------------------------------------------------------------------------


TASK №2-------------------------------------------------------------------------------------------------------------------
https://leetcode.com/problems/count-the-number-of-special-characters-i/

public class Solution {
    public int NumberOfSpecialChars(string word) {
        
        char[] checkWord = word.ToCharArray();
        int count = 0;
        HashSet<char> processedLetters = new HashSet<char>();
        

        foreach(char c in checkWord){
            if(!processedLetters.Contains(char.ToLower(c))){
                bool value = false;
                foreach(char inc in checkWord){
                    if(char.IsLower(c)){
                        if(char.ToUpper(c) == inc) {
                            value = true;
                            break;
                        }
                    } else{
                        if(char.ToLower(c) == inc) {
                            value = true;
                            break;
                        }
                    }
                    
                }
                if(value){
                    count++;
                }
                processedLetters.Add(char.ToLower(c));
            }
            
        }

       
        return count;

    }
}

TASK №2-------------------------------------------------------------------------------------------------------------------
